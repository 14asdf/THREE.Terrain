/**
 * THREE.Terrain.js 1.0.0-21042014
 *
 * @author Isaac Sukin (http://www.isaacsukin.com/)
 * @license MIT
 */

THREE.Terrain=function(a){var b={heightmap:THREE.Terrain.DiamondSquare,material:null,maxHeight:100,maxVariation:12,minHeight:-100,optimization:THREE.Terrain.NONE,perlinScale:.4,useBufferGeometry:!0,xSegments:63,xSize:1024,ySegments:63,ySize:1024};a=a||{};for(var c in b)b.hasOwnProperty(c)&&(a[c]="undefined"==typeof a[c]?b[c]:a[c]);a.unit=.5*(a.xSize/(a.xSegments+1)+a.ySize/(a.ySegments+1)),a.material=a.material||new THREE.MeshBasicMaterial({color:15623731});var d=new THREE.Scene,e=new THREE.Mesh(new THREE.PlaneGeometry(a.xSize,a.ySize,a.xSegments,a.ySegments),a.material);return e.rotation.x=-.5*Math.PI,a.heightmap instanceof HTMLCanvasElement||a.heightmap instanceof Image?THREE.Terrain.fromHeightmap(e.geometry.vertices,a):"function"==typeof a.heightmap?a.heightmap(e.geometry.vertices,a):window.console&&console.warn&&console.warn("An invalid value was passed for `options.heightmap`: "+a.heightmap),e.geometry.verticesNeedUpdate=!0,e.geometry.normalsNeedUpdate=!0,e.geometry.computeBoundingSphere(),a.useBufferGeometry&&(e.geometry=THREE.BufferGeometryUtils.fromGeometry(e.geometry)),d.add(e),d},THREE.Terrain.NONE=0,THREE.Terrain.GEOMIPMAP=1,THREE.Terrain.GEOCLIPMAP=2,function(){function a(a,b){var c=(a+"").match(/^[\s\S]*?\/\*!?\s*([\s\S]+?)\s*\*\/$/m)[1];if("undefined"!=typeof b)for(var d=Object.keys(b).sort(function(a,b){return b.length-a.length}),e=0,f=d.length;f>e;e++){var g=d[e],h=b[g];c=c.split("$"+g).join(h)}return c}function b(){/*!
    varying vec2 vUv;
    varying vec3 vPosition;
    void main( void ) {
        vUv = uv;
        vPosition = position;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(vPosition, 1);
    }
    */
var a}function c(){/*!
    $fog_pars_fragment
    varying vec2 vUv;
    varying vec3 vPosition;
$declareTextures
    void main() {
        vec4 color = texture2D( texture_0, vUv ); // base
$assignTextures
        gl_FragColor = color;
        $fog_fragment
    }
    */
var a}THREE.Terrain.generateBlendedMaterial=function(d,e){var f={},g="",h="";e&&e.fog&&(f={fogColor:{type:"c",value:e.fog.color},fogDensity:{type:"c",value:e.fog.density},fogNear:{type:"f",value:e.fog.near},fogFar:{type:"f",value:e.fog.far}});for(var i=0,j=d.length;j>i;i++)if(d[i].wrapS=d[i].wrapT=THREE.RepeatWrapping,f["texture_"+i]={type:"t",value:d[i].texture},h+="    uniform sampler2D texture_"+i+";\n",0!==i){var k=d[i].levels,l=d[i].glsl,m="undefined"!=typeof k;if(m){k[1]-k[0]<1&&(k[0]-=1),k[3]-k[2]<1&&(k[3]+=1);for(var n=0;n<k.length;n++){var o=k[n];k[n]=o|0===o?o+".0":o+""}}g+="        color = mix( texture2D( texture_"+i+", vUv ), color, max(min("+(m?"1.0 - smoothstep("+k[0]+", "+k[1]+", vPosition.z) + smoothstep("+k[2]+", "+k[3]+", vPosition.z)":l)+", 1.0), 0.0));\n"}return new THREE.ShaderMaterial({uniforms:f,vertexShader:a(b),fragmentShader:a(c,{assignTextures:g,declareTextures:h,fog_fragment:e&&e.fog?THREE.ShaderChunk.fog_fragment:"",fog_pars_fragment:e&&e.fog?THREE.ShaderChunk.fog_pars_fragment:""}),fog:!0})}}(),THREE.Terrain.fromHeightmap=function(a,b){var c=document.createElement("canvas"),d=c.getContext("2d"),e=b.ySegments+1,f=b.xSegments+1,g=b.maxHeight-b.minHeight;c.width=f,c.height=e,d.drawImage(b.heightmap,0,0,c.width,c.height);for(var h=d.getImageData(0,0,c.width,c.height).data,i=0;e>i;i++)for(var j=0;f>j;j++){var k=i*f+j,l=4*k;a[k].z=(h[l]+h[l+1]+h[l+2])/765*g}},THREE.Terrain.toHeightmap=function(a,b){var c=b.heightmap instanceof HTMLCanvasElement?b.heightmap:document.createElement("canvas"),d=c.getContext("2d"),e=b.ySegments+1,f=b.xSegments+1,g=b.maxHeight-b.minHeight;c.width=f,c.height=e;for(var h=d.createImageData(c.width,c.height),i=h.data,j=0;e>j;j++)for(var k=0;f>k;k++){var l=j*f+k,m=4*l;i[m]=i[m+1]=i[m+2]=Math.round((a[l].z-b.minHeight)/g*255),i[m+3]=255}return d.putImageData(h,0,0),c},THREE.Terrain.Corner=function(a,b){for(var c=b.maxVariation,d=.5*c,e=0,f=b.xSegments+1;f>e;e++)for(var g=0;g<b.ySegments+1;g++){var h=g*f+e,i=(g-1)*f+e,j=g*f+e-1,k=0>i?a[h].z:a[i].z,l=0>j?a[h].z:a[j].z,m=Math.random(),n=.5*(.2>m?k:.4>m?l:k+l),o=Math.random()*c-d;a[h].z+=THREE.Math.clamp(n+o,b.minHeight,b.maxHeight)}},THREE.Terrain.DiamondSquare=function(a,b){var c=Math.max(b.xSegments,b.ySegments)+1,d;for(d=1;Math.pow(2,d)<c;d++);c=Math.pow(2,d);var e=c+1,f=[],g=b.maxHeight-b.minHeight,h,i,j=b.xSegments+1,k=b.ySegments+1;for(h=0;c>=h;h++)for(f[h]=[],i=0;c>=i;i++)f[h][i]=0;for(var l=c;l>=2;l/=2){var m=Math.round(.5*l),n=Math.round(l),o,p,q,r,s;for(g/=2,o=0;c>o;o+=n)for(p=0;c>p;p+=n)r=Math.random()*g*2-g,q=f[o][p]+f[o+n][p]+f[o][p+n]+f[o+n][p+n],q*=.25,f[o+m][p+m]=q+r;for(o=0;c>o;o+=m)for(p=(o+m)%l;c>p;p+=l)r=Math.random()*g*2-g,q=f[(o-m+e)%e][p]+f[(o+m)%e][p]+f[o][(p+m)%e]+f[o][(p-m+e)%e],q*=.25,q+=r,f[o][p]=q,0===o&&(f[c][p]=q),0===p&&(f[o][c]=q)}for(h=0;j>h;h++)for(i=0;k>i;i++)a[i*j+h].z+=THREE.Math.clamp(f[h][i],b.minHeight,b.maxHeight)},window.noise&&window.noise.perlin&&(THREE.Terrain.Perlin=function(a,b){noise.seed(Math.random());for(var c=b.maxHeight-.5*b.minHeight,d=(Math.min(b.xSegments,b.ySegments)+1)*b.perlinScale,e=0,f=b.xSegments+1;f>e;e++)for(var g=0,h=b.ySegments+1;h>g;g++)a[g*f+e].z+=THREE.Math.clamp(noise.perlin(e/d,g/d)*c,b.minHeight,b.maxHeight)}),window.noise&&window.noise.simplex&&(THREE.Terrain.Simplex=function(a,b){noise.seed(Math.random());for(var c=.5*(b.maxHeight-b.minHeight),d=(Math.min(b.xSegments,b.ySegments)+1)*b.perlinScale*2,e=0,f=b.xSegments+1;f>e;e++)for(var g=0,h=b.ySegments+1;h>g;g++)a[g*f+e].z+=THREE.Math.clamp(noise.simplex(e/d,g/d)*c,b.minHeight,b.maxHeight)}),THREE.Terrain.MultiPass=function(a,b,c){for(var d=.1,e=b.maxHeight,f=b.minHeight,g=0,h=c.length;h>g;g++){if(0!==g){var i="undefined"==typeof c[g].granularity?1:c[g].granularity,j=.5*(b.maxHeight-b.minHeight)*d*i;b.maxHeight-=j,b.minHeight+=j}c[g].method(a,b)}b.maxHeight=e,b.minHeight=f,THREE.Terrain.Clamp(a,b)},THREE.Terrain.Clamp=function(a,b){var c=1/0,d=-1/0,e=a.length,f;for(f=0;e>f;f++)a[f].z<c&&(c=a[f].z),a[f].z>d&&(d=a[f].z);var g=d-c,h=d<b.maxHeight?d:b.maxHeight,i=c>b.minHeight?c:b.minHeight,j=h-i;for(f=0;e>f;f++)a[f].z=(a[f].z-c)/g*j+b.minHeight},THREE.Terrain.PerlinDiamond=function(a,b){THREE.Terrain.MultiPass(a,b,[{method:THREE.Terrain.Perlin},{method:THREE.Terrain.DiamondSquare,granularity:-2}])},THREE.Terrain.SimplexCorner=function(a,b){THREE.Terrain.MultiPass(a,b,[{method:THREE.Terrain.Simplex},{method:THREE.Terrain.Corner,granularity:2}])};
//# sourceMappingURL=THREE.Terrain.min.map